version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: image-processor-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - UPLOAD_DIR=/app/uploads
      - CORS_ORIGIN=http://localhost
      - MAX_FILE_SIZE=52428800
      - ALLOWED_MIME_TYPES=image/jpeg,image/png,image/webp,image/gif
      - CLEANUP_TTL_HOURS=24
      - CLEANUP_INTERVAL_HOURS=6
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - MAX_DISK_QUOTA=10737418240
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: image-processor-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  # Optional: Nginx reverse proxy with SSL
  # nginx:
  #   image: nginx:alpine
  #   container_name: image-processor-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #     - ./nginx/letsencrypt:/etc/letsencrypt:ro
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - app-network

volumes:
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  app-network:
    driver: bridge
